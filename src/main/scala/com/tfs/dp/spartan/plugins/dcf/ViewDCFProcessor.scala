package com.tfs.dp.spartan.plugins.dcf

import com.tfs.dp.spartan.dg.DGCatalogModel.PhysicalTable
import com.tfs.dp.spartan.plugins.SpartanProcessorPlugin
import org.apache.logging.log4j.scala.Logging
import org.apache.spark.sql.SparkSession

class ViewDCFProcessor extends SpartanProcessorPlugin with Logging{

  override def process(sparkSession:SparkSession, tableDef:PhysicalTable):Unit = {

    logger.info("Processing the view - " + tableDef.tableName)

    val sql = """SELECT CONCAT(COALESCE(b.timeEpochMillisUTC,a.timeEpochMillisUTC),':',COALESCE(b.channelSessionId,a.channelSessionId),':',COALESCE(c.inviteId,'NONE'),':',COALESCE(f.interactionId,o.interactionId,'NONE')) as uniqueRowId  , COALESCE(b.timeEpochMillisUTC,a.timeEpochMillisUTC) as journeyStartTime, a.timeEpochMillisUTC as pageLoadTimeEpochMillisUTC, COALESCE(b.associativeTag,a.associativeTag) as visitorID , COALESCE(b.channelSessionId,a.channelSessionId) as visitorBrowserSessionId , COALESCE(b.applicationId,a.applicationId) as clientID , a.pageURL as pageLoadURL , a.pageTitle as pageTitle , b.timeEpochMillisUTC as hotleadTimeEpochMillisUTC , b.evalType as hotLeadEvalType , COALESCE(b.evalFailureReason,'NULL') as  hotLeadEvalFailureReason, b.targetGroupId as targetGroupID , CASE WHEN COALESCE(b.ruleId,'NULL') = 'null' then 'NULL' ELSE COALESCE(b.ruleId,'NULL') END AS ruleID, CASE WHEN COALESCE(c.timeEpochMillisUTC,0) = 0 AND COALESCE(f.eventRaisedTimeMillis,0) = 0 AND LOWER(l.appInfo) like '%queueafterhours%' THEN 1 ELSE 0 END AS queueAfterHoursPriorInviteFlag , CASE WHEN COALESCE(c.timeEpochMillisUTC,0) = 0 AND COALESCE(f.eventRaisedTimeMillis,0) = 0 AND LOWER(l.appInfo) like '%cacheckfail%' THEN 1 ELSE 0 END AS caCheckFailPriorInviteFlag , c.timeEpochMillisUTC as inviteShownTimeEpochMillisUTC , COALESCE(c.inviteId,'NULL') as inviteID , COALESCE(c.inviteType,'NULL') as inviteType, d.timeEpochMillisUTC as inviteResponseTimeEpochMillisUTC, COALESCE(d.response,'NULL') as inviteResponseID, CASE WHEN COALESCE(d.timeEpochMillisUTC,0) > 0 AND COALESCE(f.eventRaisedTimeMillis,0) = 0 AND LOWER(l.appInfo) like '%queueafterhours%' THEN 1 ELSE 0 END AS queueAfterHoursPostInviteResponseFlag , CASE WHEN COALESCE(d.timeEpochMillisUTC,0) > 0 AND COALESCE(f.eventRaisedTimeMillis,0) = 0 AND LOWER(l.appInfo) like '%cacheckfail%' THEN 1 ELSE 0 END AS caCheckFailPostInviteResponseFlag , k.timeEpochMillisUTC as pcfShownTimeEpochMillisUTC , e.timeEpochMillisUTC as pcfSubmitTimeEpochMillisUTC , CASE WHEN COALESCE(e.timeEpochMillisUTC,0) > 0 AND COALESCE(f.eventRaisedTimeMillis,0) = 0 AND LOWER(l.appInfo) like '%queueafterhours%' THEN 1 ELSE 0 END AS queueAfterHoursPostPCFSubmitFlag , CASE WHEN COALESCE(e.timeEpochMillisUTC,0) > 0 AND COALESCE(f.eventRaisedTimeMillis,0) = 0 AND LOWER(l.appInfo) like '%cacheckfail%' THEN 1 ELSE 0 END AS caCheckFailPostPCFSubmitFlag , f.eventRaisedTimeMillis as chatRequestTimeEpochMillisUTC , COALESCE(COALESCE(f.interactionId,o.interactionId),'NULL') as interactionID , g.eventRaisedTimeMillis as chatStartedTimeEpochMillisUTC, h.eventRaisedTimeMillis as chatInteractiveTimeEpochMillisUTC , COALESCE(i.queue,'NULL') as chatDisposedQueueID , i.eventRaisedTimeMillis as chatDisposedTimeEpochMillisUTC , j.eventRaisedTimeMillis as chatCancelledTimeEpochMillisUTC , COALESCE(COALESCE(COALESCE(j.terminationCode,n.terminationCode),n.terminationCode),'NULL') as chatCancelID , COALESCE(j.queue,'NULL') as chatCancelQueueID , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) = 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_LEAVE') THEN 1 ELSE 0 END as preQueuedUserEndedFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) = 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_UNAVAILABLE') THEN 1 ELSE 0 END as preQueuedUserUnavailableFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'QUEUE_FULL') THEN 1 ELSE 0 END as preQueuedQueueFullFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) = 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_TIMEOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_REJECTED' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'ADDRESS_BOOK_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'COLLABORATION_SERVER_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_STATE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_LIFECYCLE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'CACHE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'SYSTEM_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'UNCLASSIFIED_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'MONITORING_RECONCILE')) THEN 1 ELSE 0 END as preQueuedPlatformFailureFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_LEAVE') THEN 1 ELSE 0 END as preConnectedUserEndedFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_UNAVAILABLE') THEN 1 ELSE 0 END as preConnectedUserUnavailableFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_NON_RESPONSIVE_AUTO_TERMINATED') THEN 1 ELSE 0 END as preConnectedUserUnreachableAgentEndedFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) > 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_UNREACHABLE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_ABRUPT_LOGOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_TIMEDOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_LEFT')) THEN 1 ELSE 0 END as preConnectedAgentLostFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) > 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_TIMEOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_REJECTED' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'ADDRESS_BOOK_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'COLLABORATION_SERVER_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_STATE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_LIFECYCLE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'CACHE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'SYSTEM_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'UNCLASSIFIED_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'MONITORING_RECONCILE')) THEN 1 ELSE 0 END as preConnectedPlatformFailureFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) = 1 AND COALESCE(f.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'QUEUE_TIMEOUT') THEN 1 ELSE 0 END as preConnectedQueueTimeOutFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_LEAVE') THEN 1 ELSE 0 END as preInteractiveUserEndedFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_UNAVAILABLE') THEN 1 ELSE 0 END as preInteractiveUserUnavailableFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) > 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_UNREACHABLE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_ABRUPT_LOGOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_TIMEDOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_LEFT')) THEN 1 ELSE 0 END as preInteractiveAgentLostFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) = 1 AND COALESCE(g.eventRaisedTimeMillis,1) > 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_TIMEOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_REJECTED' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'ADDRESS_BOOK_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'COLLABORATION_SERVER_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_STATE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_LIFECYCLE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'CACHE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'SYSTEM_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'UNCLASSIFIED_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'MONITORING_RECONCILE')) THEN 1 ELSE 0 END as preInteractivePlatformFailureFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_LEAVE') THEN 1 ELSE 0 END as postInteractiveUserEndedFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_UNAVAILABLE') THEN 1 ELSE 0 END as postInteractiveUserUnavailableFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_NON_RESPONSIVE_AUTO_TERMINATED') THEN 1 ELSE 0 END as postInteractiveUserUnreachableAgentEndedFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_UNREACHABLE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_ABRUPT_LOGOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_TIMEDOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_LEFT')) THEN 1 ELSE 0 END as postInteractiveAgentLostFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND (COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_TIMEOUT' OR COALESCE(j.terminationCode,n.terminationCode) = 'ALLOCATION_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_REJECTED' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'VISITOR_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_INVITE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'OWNER_COLLAB_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'ADDRESS_BOOK_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'COLLABORATION_SERVER_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_STATE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'INTERACTION_LIFECYCLE_ERROR' OR COALESCE(j.terminationCode,n.terminationCode) = 'CACHE_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'SYSTEM_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'UNCLASSIFIED_FAILURE' OR COALESCE(j.terminationCode,n.terminationCode) = 'MONITORING_RECONCILE')) THEN 1 ELSE 0 END as postInteractivePlatformFailureFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'QUEUE_TIMEOUT') THEN 1 ELSE 0 END as postInteractiveQueueTimeOutFlag , CASE WHEN (COALESCE(h.eventRaisedTimeMillis,1) > 1 AND COALESCE(j.terminationCode,n.terminationCode) = 'QUEUE_FULL') THEN 1 ELSE 0 END as postInteractiveQueueFullFlag , COALESCE(i.resolved,0) as resolvedFlag , COALESCE(i.inScope,0) as inScopeFlag , CASE WHEN m.participantInteractiveStatus = 'NON_INTERACTIVE' THEN 1 ELSE 0 END AS agentVisitorInactiveFlag , CASE WHEN m.participantInteractiveStatus = 'AGENT_NON_INTERACTIVE' THEN 1 ELSE 0 END AS agentInactiveFlag , CASE WHEN m.participantInteractiveStatus = 'VISITOR_NON_INTERACTIVE' THEN 1 ELSE 0 END AS visitorInactiveFlag , COALESCE(n.visitorActivityStatusAtDisconnect,'NULL') as visitorActivityStatusAtDisconnect , CASE WHEN ((COALESCE(j.terminationCode,n.terminationCode) in ('VISITOR_LEAVE','VISITOR_UNAVAILABLE')) AND (COALESCE(j.eventRaisedTimeMillis,n.eventRaisedTimeMillis,e.timeEpochMillisUTC,d.timeEpochMillisUTC,0) - COALESCE(d.timeEpochMillisUTC,e.timeEpochMillisUTC,0) <= 5000)) then 1 else 0 end as accpetToCancel1to5SecFlag , CASE WHEN ((COALESCE(j.terminationCode,n.terminationCode) in ('VISITOR_LEAVE','VISITOR_UNAVAILABLE')) AND (COALESCE(j.eventRaisedTimeMillis,n.eventRaisedTimeMillis,e.timeEpochMillisUTC,d.timeEpochMillisUTC,0) - COALESCE(d.timeEpochMillisUTC,e.timeEpochMillisUTC,0) between 5001 and 10000)) then 1 else 0 end as accpetToCancel6to10SecFlag , CASE WHEN ((COALESCE(j.terminationCode,n.terminationCode) in ('VISITOR_LEAVE','VISITOR_UNAVAILABLE')) AND (COALESCE(j.eventRaisedTimeMillis,n.eventRaisedTimeMillis,e.timeEpochMillisUTC,d.timeEpochMillisUTC,0) - COALESCE(d.timeEpochMillisUTC,e.timeEpochMillisUTC,0) between 10001 and 15000)) then 1 else 0 end as accpetToCancel11to15SecFlag  , CASE WHEN ((COALESCE(j.terminationCode,n.terminationCode) in ('VISITOR_LEAVE','VISITOR_UNAVAILABLE')) AND (COALESCE(j.eventRaisedTimeMillis,n.eventRaisedTimeMillis,e.timeEpochMillisUTC,d.timeEpochMillisUTC,0) - COALESCE(d.timeEpochMillisUTC,e.timeEpochMillisUTC,0) between 15001 and 30000)) then 1 else 0 end as accpetToCancel16to30SecFlag  , CASE WHEN ((COALESCE(j.terminationCode,n.terminationCode) in ('VISITOR_LEAVE','VISITOR_UNAVAILABLE')) AND (COALESCE(j.eventRaisedTimeMillis,n.eventRaisedTimeMillis,e.timeEpochMillisUTC,d.timeEpochMillisUTC,0) - COALESCE(d.timeEpochMillisUTC,e.timeEpochMillisUTC,0) > 30000)) then 1 else 0 end as accpetToCancelMoreThan30SecFlag  , CASE WHEN COALESCE(d.timeEpochMillisUTC,0) > 0 AND d.response = 'ACCEPTED' AND COALESCE(o.eventRaisedTimeMillis,0) = 0 then 1 else 0 end as aivaChatFlag , n.eventRaisedTimeMillis as chatTerminatedTimeEpochMillisUTC , o.queue as chatInitiatedQueueID, a.operatingSystem  , a.userAgent, a.browser  , a.deviceType  FROM  (  SELECT a.timeEpochMillisUTC, a.associativeTag, a.channelSessionId, a.applicationId, a.targetGroupId, a.ruleId, COALESCE(min(b.timeEpochMillisUTC),a.timeEpochMillisUTC+300000) as timeEpochMillisUTCNextHotLead, a.evalType, a.evalFailureReason, a.clientId  FROM  (  SELECT header.timeEpochMillisUTC  , header.applicationId  , header.associativeTag  , header.channelSessionId   , header.clientId   , body.typeSpecificBody.body.TargetDeterminationEvent.targetGroupId  , body.typeSpecificBody.body.TargetDeterminationEvent.ruleId   , body.typeSpecificBody.body.EvalConditionCheck.evalType  , body.typeSpecificBody.body.EvalConditionCheck.evalFailureReason  from RawIDM where body.typeSpecificBody.body.TargetDeterminationEvent IS NOT NULL OR body.typeSpecificBody.body.EvalConditionCheck IS NOT NULL   ) a   LEFT OUTER JOIN   (  SELECT header.timeEpochMillisUTC  , header.applicationId  , header.associativeTag  , header.channelSessionId  , body.typeSpecificBody.body.TargetDeterminationEvent.targetGroupId  , body.typeSpecificBody.body.TargetDeterminationEvent.ruleId   from RawIDM where body.typeSpecificBody.body.TargetDeterminationEvent IS NOT NULL OR body.typeSpecificBody.body.EvalConditionCheck IS NOT NULL   ) b on a.associativeTag = b.associativeTag and a.channelSessionId = b.channelSessionId and a.applicationId = b.applicationId and a.timeEpochMillisUTC < b.timeEpochMillisUTC   group by a.timeEpochMillisUTC, a.associativeTag, a.channelSessionId, a.applicationId, a.targetGroupId, a.ruleId, a.evalType, a.evalFailureReason, a.clientId  ) b  LEFT OUTER JOIN  (  SELECT a.timeEpochMillisUTC, a.associativeTag, a.channelSessionId, a.applicationId, a.pageURL, a.pageTitle, a.navigationPath, a.referrerURL, COALESCE(min(b.timeEpochMillisUTC),a.timeEpochMillisUTC+300000) as timeEpochMillisUTCNextPageLoad, a.clientId, a.operatingSystem, a.userAgent, a.browser, a.deviceType    FROM   (  SELECT header.timeEpochMillisUTC  , header.associativeTag   , header.channelSessionId   , header.applicationId   , header.clientId   , body.typeSpecificBody.body.WebPageLoadEvent.pageURL  , body.typeSpecificBody.body.WebPageLoadEvent.pageTitle  , body.typeSpecificBody.body.WebPageLoadEvent.navigationPath   , body.typeSpecificBody.body.WebPageLoadEvent.referrerURL   , reverse(substring_index(reverse(substring_index(body.customProperties.userAgent.value.string,')',1)),'(',1)) as operatingSystem  , body.customProperties.userAgent.value.string AS userAgent, body.customProperties.Browser.value.string as browser   , body.customProperties.deviceType.value.string as deviceType  FROM RawIDM WHERE body.typeSpecificBody.body.WebPageLoadEvent IS NOT NULL  ) a   LEFT OUTER JOIN   (   SELECT header.timeEpochMillisUTC  , header.associativeTag   , header.channelSessionId   , header.applicationId   , body.typeSpecificBody.body.WebPageLoadEvent.pageURL  , body.typeSpecificBody.body.WebPageLoadEvent.pageTitle  , body.typeSpecificBody.body.WebPageLoadEvent.navigationPath   , body.typeSpecificBody.body.WebPageLoadEvent.referrerURL   FROM RawIDM WHERE body.typeSpecificBody.body.WebPageLoadEvent IS NOT NULL  ) b on a.associativeTag = b.associativeTag and a.channelSessionId = b.channelSessionId and a.applicationId = b.applicationId and a.timeEpochMillisUTC < b.timeEpochMillisUTC   group by a.timeEpochMillisUTC, a.associativeTag, a.channelSessionId, a.applicationId, a.pageURL, a.pageTitle, a.navigationPath, a.referrerURL, a.clientId, a.operatingSystem, a.userAgent, a.browser, a.deviceType  ) a on a.applicationId = b.applicationId and a.associativeTag = b.associativeTag and a.channelSessionId = b.channelSessionId and b.timeEpochMillisUTC between a.timeEpochMillisUTC and COALESCE(a.timeEpochMillisUTCNextPageLoad,b.timeEpochMillisUTC)  LEFT OUTER JOIN  (  SELECT header.timeEpochMillisUTC   , header.applicationId  , header.associativeTag  , header.channelSessionId   , header.clientId   , body.typeSpecificBody.body.OnlineInvitationOfferEvent.inviteId  , body.typeSpecificBody.body.OnlineInvitationOfferEvent.inviteType   from RawIDM where body.typeSpecificBody.body.OnlineInvitationOfferEvent IS NOT NULL  ) c on COALESCE(b.applicationId,a.applicationId) = c.applicationId and COALESCE(b.associativeTag,a.associativeTag) = c.associativeTag  and COALESCE(b.channelSessionId,a.channelSessionId) = substring_index(c.channelSessionId,'@@',1)  and c.timeEpochMillisUTC between b.timeEpochMillisUTC and b.timeEpochMillisUTCNextHotLead LEFT OUTER JOIN  (  SELECT MAX(header.timeEpochMillisUTC) as timeEpochMillisUTC   , header.applicationId  , header.associativeTag  , header.channelSessionId   , header.clientId   , body.typeSpecificBody.body.Application.appEntity  , body.typeSpecificBody.body.Application.appAction  , body.typeSpecificBody.body.Application.appInfo  from RawIDM where body.typeSpecificBody.body.Application IS NOT NULL AND UPPER(header.channel) = 'OMNICHANNEL' AND (body.typeSpecificBody.body.Application.appInfo like '%queueAfterHours%' OR body.typeSpecificBody.body.Application.appInfo like '%caCheckFail%')   GROUP BY   header.applicationId  , header.associativeTag  , header.channelSessionId   , header.clientId   , body.typeSpecificBody.body.Application.appEntity  , body.typeSpecificBody.body.Application.appAction  , body.typeSpecificBody.body.Application.appInfo  ) l on COALESCE(b.applicationId,a.applicationId) = l.applicationId and COALESCE(b.associativeTag,a.associativeTag) = l.associativeTag  and COALESCE(b.channelSessionId,a.channelSessionId) = substring_index(l.channelSessionId,'@@',1)  and l.timeEpochMillisUTC between b.timeEpochMillisUTC and b.timeEpochMillisUTCNextHotLead  LEFT OUTER JOIN  (  SELECT header.timeEpochMillisUTC   , header.applicationId  , header.associativeTag  , header.channelSessionId   , header.clientId   , body.typeSpecificBody.body.OnlineInvitationResponseEvent.inviteId  , body.typeSpecificBody.body.OnlineInvitationResponseEvent.inviteType   , body.typeSpecificBody.body.OnlineInvitationResponseEvent.response   from RawIDM where body.typeSpecificBody.body.OnlineInvitationResponseEvent IS NOT NULL  ) d on c.applicationId = d.applicationId and c.associativeTag = d.associativeTag and c.channelSessionId = d.channelSessionId  and c.inviteId = d.inviteId  LEFT OUTER JOIN  (  SELECT header.timeEpochMillisUTC   , header.applicationId  , header.associativeTag  , header.channelSessionId   , header.clientId   , body.typeSpecificBody.body.OnlineSurveySubmitEvent.questionsAndAnswers  from RawIDM where body.typeSpecificBody.body.OnlineSurveySubmitEvent IS NOT NULL AND UPPER(body.typeSpecificBody.body.OnlineSurveySubmitEvent.surveyId) = 'PCF'  ) e on d.applicationId = e.applicationId and d.associativeTag = e.associativeTag and d.channelSessionId = e.channelSessionId  LEFT OUTER JOIN  (  SELECT max(header.timeEpochMillisUTC) as timeEpochMillisUTC   , header.applicationId  , header.associativeTag  , header.channelSessionId  , body.typeSpecificBody.body.OnlineScreenLoadEvent.screenId  , body.typeSpecificBody.body.OnlineScreenLoadEvent.screenTitle   from RawIDM where body.typeSpecificBody.body.OnlineScreenLoadEvent IS NOT NULL AND UPPER(body.typeSpecificBody.body.OnlineScreenLoadEvent.screenType) = 'PRECHAT'   group by header.applicationId  , header.associativeTag  , header.channelSessionId  , body.typeSpecificBody.body.OnlineScreenLoadEvent.screenId  , body.typeSpecificBody.body.OnlineScreenLoadEvent.screenTitle ) k on COALESCE(d.applicationId,c.applicationId) = k.applicationId and COALESCE(d.associativeTag,c.associativeTag) = k.associativeTag and COALESCE(d.channelSessionId,c.channelSessionId) = k.channelSessionId  LEFT OUTER JOIN  (  select min(eventRaisedTimeMillis) as eventRaisedTimeMillis   , interactionId  , context.data.vi  , context.data.psid  , context.account  , context.client   from AssistInteractions   where eventType = 'interaction/status/requested'   group by   interactionId  , context.data.vi  , context.data.psid  , context.account  , context.client  ) f on COALESCE(d.associativeTag,c.associativeTag) = f.vi and COALESCE(d.inviteId,c.inviteId) = f.psid and COALESCE(d.clientId,c.clientId) = substring_index(f.account,'-',1) LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis  , interactionId  , context.data.vi  , context.data.psid  , context.data.queue  , context.data.queueTransferCount  , context.account  , context.client  from AssistInteractions  where eventType = 'interaction/status/started' ) g on (f.interactionId = g.interactionId) and f.account = g.account  LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis  , interactionId  , context.data.vi  , context.data.queue  , context.data.queueTransferCount  , context.account  , context.client   from AssistInteractions   where eventType = 'interaction/status/interactive'  ) h on (COALESCE(g.interactionId,f.interactionId) = h.interactionId) and (COALESCE(g.account,f.account) = h.account)  LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis  , interactionId  , context.data.vi  , context.data.queue  , context.data.queueTransferCount  , context.account  , context.client   , UPPER(COALESCE(participantInteractiveStatus,'')) as participantInteractiveStatus  from AssistInteractions   where eventType = 'interaction/status/noninteractive'  ) m on (COALESCE(g.interactionId,f.interactionId) = m.interactionId) and (COALESCE(g.account,f.account) = m.account)  LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis  , interactionId  , context.data.vi  , context.data.queue  , context.data.queueTransferCount  , context.account  , context.client , CASE WHEN 'NO' = 'YES' then 1 else 0 end as resolved , CASE WHEN 'NO' = 'YES' then 1 else 0 end as inScope  from AssistInteractions   where eventType = 'interaction/status/disposed' ) i on (COALESCE(h.interactionId,g.interactionId,f.interactionId) = i.interactionId)  LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis  , interactionId  , context.data.vi  , context.data.psid   , context.data.queue  , context.data.queueTransferCount  , context.account  , context.client  , COALESCE(UPPER(context.terminationReason),'NULL') as terminationCode  from AssistInteractions   where eventType = 'interaction/status/cancelled' ) j on (((COALESCE(h.interactionId,g.interactionId,f.interactionId) = j.interactionId) and (COALESCE(h.account,g.account,f.account) = j.account)) OR (COALESCE(d.associativeTag,c.associativeTag) = j.vi and COALESCE(d.inviteId,c.inviteId) = j.psid and COALESCE(d.clientId,c.clientId) = substring_index(j.account,'-',1)))  LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis  , interactionId  , context.data.vi  , context.data.queue  , context.data.queueTransferCount  , context.account  , context.client   , COALESCE(UPPER(context.terminationReason),'NULL') as terminationCode , UPPER(context.data.VISITOR_STATUS_AT_TIME_OF_DISCONNECT) as visitorActivityStatusAtDisconnect   from AssistInteractions   where eventType = 'interaction/status/terminated'  ) n on (COALESCE(h.interactionId,g.interactionId,f.interactionId) = n.interactionId) and (COALESCE(h.account,g.account,f.account) = n.account)  LEFT OUTER JOIN  (  select DISTINCT eventRaisedTimeMillis   , interactionId  , context.data.vi  , context.data.psid  , context.account  , context.client   , context.data.queue   from AssistInteractions   where eventType = 'interaction/initiated'  ) o on COALESCE(d.associativeTag,c.associativeTag) = o.vi and COALESCE(d.inviteId,c.inviteId) = o.psid and COALESCE(d.clientId,c.clientId) = substring_index(o.account,'-',1)"""

    sparkSession.sql(sql).createOrReplaceTempView(tableDef.tableName)
  }
}
